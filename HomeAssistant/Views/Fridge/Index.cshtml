@using HomeAssistant.Core.Enums
@using HomeAssistant.Core.Models.Fridge
@using HomeAssistant.Core.Models.Product
@model FridgeViewModel

@{
	Dictionary<string, string> previousPages = new();

	previousPages.Add("Fridge", "/Fridge/index");
	ViewBag.previousPages = previousPages;
}

<link rel="stylesheet" href="~/css/fridge.css" asp-append-version="true" />

<partial name="/Views/Shared/_ToastPopupPartial.cshtml" />

<div class="input-form">
	<h1>Add/Edit Products</h1>
	<div class="form-outline" data-mdb-input-init>
		<input onkeyup="onInput(this)" type="search" id="form1" class="form-control" placeholder="Add/Search products by name" aria-label="Search" />
	</div>
	<table class="table table-striped table-hover table-info">
		<tbody class="search-results">
		</tbody>
	</table>
</div>

<div class="main-container">
	<div>
		@if (ViewBag.Available)
		{
			<h1>Available Products</h1>
		}
		else
		{
			<h1>Products Out of Stock</h1>
		}
		<div class="filter-btns">
			<div>
				<a asp-route-isAvailable="true"
				   asp-route-categoryId="@ViewBag.CategoryId"
				   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())"
				   class="btn @(ViewBag.Available ? "btn-danger" : "btn-outline-danger")">
					Available
				</a>
				<a asp-route-isAvailable="false"
				   asp-route-categoryId="@ViewBag.CategoryId"
				   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())"
				   class="btn @(ViewBag.Available ?"btn-outline-danger" : "btn-danger" )">
					Unavailable
				</a>
			</div>

		</div>
	<div class="product-container">
		<div>
			<div class="dropdown">
				<button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
					@if (ViewBag.CategoryId != null)
					{
						@(((IEnumerable<CategoryViewModel>)ViewBag.Categories).First(x => x.Id == ViewBag.CategoryId).Name)
					}
					else
					{
						@("All Categories")
					}
				</button>
				<ul class="dropdown-menu">
					<li><a class="dropdown-item" asp-action="Index" asp-route-isAvailable="@ViewBag.Available" asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())">All Categories</a></li>
					@foreach (var category in (IEnumerable<CategoryViewModel>)ViewBag.Categories)
					{
						<li>
							<a class="dropdown-item"
							   asp-action="Index"
							   asp-route-isAvailable="@ViewBag.Available"
							   asp-route-categoryId="@category.Id"
							   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())">
								@category.Name
							</a>
						</li>
					}
				</ul>
			</div>
			<div class="dropdown">
				<button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
					Order By: @(((OrderBy)ViewBag.OrderBy).ToString())
				</button>
				<ul class="dropdown-menu">
					@foreach (var option in Enum.GetValues(typeof(OrderBy)))
					{
						<li>
							<a class="dropdown-item"
							   asp-action="Index"
							   asp-route-isAvailable="@ViewBag.Available"
							   asp-route-categoryId="@ViewBag.CategoryId"
							   asp-route-orderBy="@option">
								@option
							</a>
						</li>
					}
				</ul>
			</div>
		</div>
		<div>
			@foreach (var product in Model.Products)
			{
				<div class="product">
					<div class="left">
						<p class="product-name">
							@product.Name
							@if (product.Weight == null)
								@("-- g")
							else
								@(product.Weight + " g")


						</p>
						@{
							var duration = DateTime.Now - product.AddedOn;

							string convertedDuration = "Added ";
							if (duration.TotalDays >= 1)
							{
								convertedDuration += Math.Round(duration.TotalDays) + (Math.Round(duration.TotalDays) == 1 ? " day" : " days") + " ago";
							}
							else if (duration.TotalHours >= 1)
							{
								convertedDuration += Math.Round(duration.TotalHours) + (Math.Round(duration.TotalHours) == 1 ? " hour" : " hours") + " ago";
							}
							else if (duration.TotalMinutes >= 1)
							{
								convertedDuration += Math.Round(duration.TotalMinutes) + (Math.Round(duration.TotalMinutes) == 1 ? " minute" : " minutes") + " ago";
							}
							else
							{
								convertedDuration += " less than a minute ago";
							}
							<p class="text-muted">@convertedDuration</p>
						}

						<figcaption class="blockquote-footer">
							@product.ProductCategory.Name
						</figcaption>
					</div>
					<div class="right">
						<form method="post"
							  asp-action="DecreaseProductQuantity"
							  asp-route-productId="@product.Id">
							<button class="btn">
								<img src="~/svg/minus-circle.svg" />
							</button>
						</form>
						<p class="product-count @(product.Count==0?"text-danger fw-bold":"")">@product.Count</p>
						<form method="post"
							  asp-action="IncreaseProductQuantity"
							  asp-route-productId="@product.Id">
							<button class="btn">
								<img src="~/svg/plus-Circle.svg" />
							</button>
						</form>
					</div>
				</div>
			}
		</div>
		@if (Model.PageCount != 0)
		{
			<nav aria-label="Page navigation example">
				<ul class="pagination">
					<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
						<a class="page-link"
						   asp-action="Index"
						   asp-route-isAvailable="@ViewBag.Available"
						   asp-route-categoryId="@ViewBag.CategoryId"
						   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())"
						   asp-route-page="@((Model.CurrentPage)-1)">
							Previous
						</a>
					</li>
					@for (int i = 1; i <= Model.PageCount; i++)
					{
						<li class="page-item @(Model.CurrentPage == @i ? "active" : "")">
							<a class="page-link"
							   asp-action="Index"
							   asp-route-isAvailable="@ViewBag.Available"
							   asp-route-categoryId="@ViewBag.CategoryId"
							   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())"
							   asp-route-page="@i">
								@i
							</a>
						</li>
					}
					<li class="page-item @(Model.CurrentPage == Model.PageCount ? "disabled" : "")">
						<a class="page-link"
						   asp-action="Index"
						   asp-route-isAvailable="@ViewBag.Available"
						   asp-route-categoryId="@ViewBag.CategoryId"
						   asp-route-orderBy="@(((OrderBy)ViewBag.OrderBy).ToString())"
						   asp-route-page="@((Model.CurrentPage)+1)">
							Next
						</a>
					</li>
				</ul>
			</nav>
		}
	</div>
	</div>
	<div class="right-panel">
		<div class="not-container-title">
			<h3>Latest Fridge Activity:</h3>
		</div>
		<div class="notifications">
			@foreach (var notification in Model.LatestFridgeActivity)
			{
				<div class="accordion-item">
					<h2 class="accordion-header" id="headingTwo">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" aria-expanded="false">
							<div class="notf-title">
								<p>@notification.Title</p>
								@{
									var duration = DateTime.Now - notification.CreatedOn;

									string convertedDuration = "";
									if (duration.TotalDays >= 1)
									{
										convertedDuration += Math.Round(duration.TotalDays) + (Math.Round(duration.TotalDays) == 1 ? " day" : " days") + " ago";
									}
									else if (duration.TotalHours >= 1)
									{
										convertedDuration += Math.Round(duration.TotalHours) + (Math.Round(duration.TotalHours) == 1 ? " hour" : " hours") + " ago";
									}
									else if (duration.TotalMinutes >= 1)
									{
										convertedDuration += Math.Round(duration.TotalMinutes) + (Math.Round(duration.TotalMinutes) == 1 ? " minute" : " minutes") + " ago";
									}
									else
									{
										convertedDuration += "Less than a minute ago";
									}
									<p class="text-muted">@convertedDuration</p>
								}
							</div>

							@if (notification.Invoker.Photo != null && notification.Invoker.Photo.Length != 0)
							{
								<div class="notification-img-container">
									<div class="smallpfp">
										<img src="data:image/jpeg;base64,@Convert.ToBase64String(notification.Invoker.Photo)" alt="Profile Picture" />
									</div>
									@notification.Invoker.FirstName
								</div>
							}
						</button>
					</h2>
					<div class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
					</div>
				</div>
			}
		</div>
	</div>
</div>

@section Scripts {
	<script src="~/js/toastPopup.js"></script>
	<script src="~/js/productSearch.js"></script>
}