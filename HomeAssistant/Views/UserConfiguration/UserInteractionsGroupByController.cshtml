@using HomeAssistant.Core.Constants
@using HomeAssistant.Core.Models
@using HomeAssistant.Core.Models.User
@using System.Text.Json
@model GroupByControllerUserInteractionPaginationModel

<link rel="stylesheet" href="~/css/userconfig.css" />

<h1>Users Interactions Logs By Controller</h1>

<partial name="/Views/Shared/_ToastPopupPartial.cshtml" />

<div class="interactions-container">
	@foreach (var controller in Model.Records.Keys)
	{
		<div class="accordion-item">
			<h2 class="accordion-header" id="headingTwo">
				<button class="accordion-button collapsed " type="button" data-bs-toggle="collapse" data-bs-target="#@(controller)" aria-expanded="false" aria-controls="collapseTwo">
					<div class="interaction">
						<p>@(controller)</p>
					</div>
				</button>
			</h2>
			<div id="@(controller)" class="accordion-collapse collapse">
				<div class="accordion-body">
					@for (int i = 0; i < Model.Records[controller].Count; i++)
					{
						var interaction = Model.Records[controller][i];

						string formattedJsonString = JsonSerializer
						.Serialize(JsonDocument.Parse(interaction.ActionArgumentsJson), new JsonSerializerOptions()
					{
						WriteIndented = true
					}).Trim();
						<div class="overall-log-container">
							<p class="time">@interaction.DateTime.ToString(DataValidationConstants.DateTimeFormat):</p>
							<div class="accordion-item">
								<h2 class="accordion-header" id="headingTwo">
									<button class="accordion-button collapsed " type="button" data-bs-toggle="collapse" data-bs-target="#a@(i)" aria-expanded="false" aria-controls="collapseTwo">
										<div class="interaction">
											<div class="url">
												<p class="request-type">@interaction.RequestType</p>
												<p class="request-url" title="@interaction.QueryString">@interaction.RequestUrl<strong>@interaction.QueryString</strong></p>
											</div>
											<div class="author">
												<p class="username @interaction.UserName">@@@interaction.UserName</p>
											</div>

										</div>
									</button>
								</h2>
								<div id="a@(i)" class="accordion-collapse collapse">
									<div class="accordion-body">
										<h3>URL</h3>
										<p>@interaction.RequestUrl<strong>@interaction.QueryString</strong></p>
										<h3>Body Json</h3>
										<pre class="code-block">@formattedJsonString</pre>
									</div>
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	}
</div>

@if (Model.TotalPages > 1)
{
	int counter = 0;

	<ul class="pagination">
		<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
			<a class="page-link" asp-controller="UserConfiguration" asp-action="UserInteractionsGroupByController" asp-route-page="1" asp-route-count="@ViewBag.Count">First</a>
		</li>

		@if (Model.CurrentPage>1)
		{
			<li class="page-item">
				<a class="page-link" asp-controller="UserConfiguration" asp-action="UserInteractionsGroupByController" asp-route-page="@(Model.CurrentPage-1)" asp-route-count="@ViewBag.Count">@(Model.CurrentPage - 1)</a>
			</li>
		}

		@for (int i = Model.CurrentPage; i <= Model.TotalPages; i++)
		{
			<li class="page-item @(Model.CurrentPage == i ? "active" : "")">
				<a class="page-link" asp-controller="UserConfiguration" asp-action="UserInteractionsGroupByController" asp-route-page="@i" asp-route-count="@ViewBag.Count">@(i)</a>
			</li>

			counter++;

			if (counter>=3)
			{
				break;
			}
		}
		<li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
			<a class="page-link" asp-controller="UserConfiguration" asp-action="UserInteractionsGroupByController" asp-route-page="@(Model.TotalPages)" asp-route-count="@ViewBag.Count">Last</a>
		</li>
	</ul>
}

<script>
	function getRandomColor() {
		const letters = '012345678AE';
		let color = '#';
		for (let i = 0; i < 6; i++) {
			color += letters[Math.floor(Math.random() * 11)];
		}
		return color;
	}

	const pElements = document.querySelectorAll('p.username');

	const userIdColors = {};

	pElements.forEach(p => {
		const classes = Array.from(p.classList);
		classes.forEach(className => {
			if (!userIdColors[className]) {
				userIdColors[className] = getRandomColor();
			}
			p.style.color = userIdColors[className];
		});
	});
</script>

@section SideMenu {
	<partial name="/Views/UserConfiguration/Shared/_SideMenuPartial.cshtml" />
}

@section Scripts {
	<script src="~/js/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
	<script src="~/js/UsersLogActivirySignalR.js" asp-append-version="true"></script>
}